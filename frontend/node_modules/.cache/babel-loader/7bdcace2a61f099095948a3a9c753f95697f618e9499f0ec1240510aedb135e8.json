{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cloud\\\\Desktop\\\\praktikum\\\\dev\\\\react-mesto-api-full-gha\\\\frontend\\\\src\\\\components\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport ImagePopup from './ImagePopup';\nimport { api } from '../utils/Api';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport AddPlacePopup from './AddPlacePopup';\nimport ConfirmationPopup from './ConfirmationPopup';\nimport { Routes, Route, Navigate, useNavigate, useLocation } from 'react-router-dom';\nimport ProtectedRoute from './ProtectedRoute';\nimport Login from './Login';\nimport Register from './Register';\nimport * as authApi from '../utils/AuthApi';\nimport InfoTooltip from './InfoTooltip';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const [isEditProfilePopupOpen, setEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setAddPlacePopupOpen] = useState(false);\n  const [isEditAvatarPopupOpen, setEditAvatarPopupOpen] = useState(false);\n  const [isConfirmationPopupOpen, setConfirmationPopupOpen] = useState(false);\n  const [isStatusPopupOpen, setStatusPopupOpen] = useState(false);\n  const [selectedCard, setSelectedCard] = useState({\n    isOpen: false,\n    link: '',\n    name: ''\n  });\n  const [currentUser, setCurrentUser] = useState({});\n  const [cards, setCards] = useState([]);\n  const [deletedCardId, setDeletedCardId] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [email, setEmail] = useState('');\n  const [isSuccess, setIsSuccess] = useState(false);\n  useEffect(() => {\n    if (isLoggedIn) {\n      Promise.all([api.getUserInfo(), api.getInitialCards()]).then(([userData, initialCards]) => {\n        setCurrentUser(userData);\n        setCards(initialCards);\n      }).catch(err => alert(err));\n    }\n  }, [isLoggedIn]);\n  useEffect(() => {\n    if (location.pathname !== '/sign-in') {\n      navigate('/sign-in');\n    }\n  }, []);\n  useEffect(() => {\n    function onPushEsc(evt) {\n      if (evt.key === 'Escape') {\n        closeAllPopups();\n      }\n    }\n    if (isAddPlacePopupOpen || isConfirmationPopupOpen || isEditAvatarPopupOpen || isEditProfilePopupOpen || selectedCard || isStatusPopupOpen) {\n      document.addEventListener('keydown', onPushEsc);\n    } else {\n      document.removeEventListener('keydown', onPushEsc);\n    }\n  }, [isAddPlacePopupOpen, isConfirmationPopupOpen, isEditAvatarPopupOpen, isEditProfilePopupOpen, selectedCard, isStatusPopupOpen]);\n  useEffect(() => {\n    handleTokenCheck();\n  }, []);\n  function handleEditProfileClick() {\n    setEditProfilePopupOpen(true);\n  }\n  function handleEditAvatarClick() {\n    setEditAvatarPopupOpen(true);\n  }\n  function handleAddPlaceClick() {\n    setAddPlacePopupOpen(true);\n  }\n  function handleDeleteButtonClick(id) {\n    setDeletedCardId(id);\n    setConfirmationPopupOpen(true);\n  }\n  function closeAllPopups() {\n    setEditAvatarPopupOpen(false);\n    setEditProfilePopupOpen(false);\n    setAddPlacePopupOpen(false);\n    setSelectedCard({\n      isOpen: false,\n      link: '',\n      name: ''\n    });\n    setConfirmationPopupOpen(false);\n    setDeletedCardId('');\n    setStatusPopupOpen(false);\n  }\n  function handleCardClick(card) {\n    setSelectedCard({\n      isOpen: true,\n      link: card.link,\n      name: card.name\n    });\n  }\n  function handleCardLike(card, isLiked) {\n    api.handleCardLike(card._id, isLiked).then(newCard => {\n      setCards(state => state.map(c => c._id === card._id ? newCard : c));\n    }).catch(err => alert(err));\n  }\n  function handleCardDelete(id) {\n    setIsLoading(true);\n    api.deleteCard(id).then(() => {\n      setCards(state => state.filter(c => c._id !== id));\n      closeAllPopups();\n    }).catch(err => alert(err)).finally(() => {\n      setIsLoading(false);\n    });\n  }\n  function handleUpdateUser(name, description) {\n    setIsLoading(true);\n    api.editUserInfo(name, description).then(newData => {\n      setCurrentUser(newData);\n      closeAllPopups();\n    }).catch(err => alert(err)).finally(() => {\n      setIsLoading(false);\n    });\n  }\n  function handleUpdateAvatar(link) {\n    setIsLoading(true);\n    api.changeAvatar(link).then(newData => {\n      setCurrentUser(newData);\n      closeAllPopups();\n    }).catch(err => alert(err)).finally(() => {\n      setIsLoading(false);\n    });\n  }\n  function handleAddPlace(name, link) {\n    setIsLoading(true);\n    api.sendNewCard(name, link).then(newCard => {\n      setCards([newCard, ...cards]);\n      closeAllPopups();\n    }).catch(err => alert(err)).finally(() => {\n      setIsLoading(false);\n    });\n  }\n  function handleRegister(password, email) {\n    setIsLoading(true);\n    authApi.register(password, email).then(res => {\n      if (res.data) {\n        setIsSuccess(true);\n      }\n      setStatusPopupOpen(true);\n    }).catch(err => {\n      setIsSuccess(false);\n      setStatusPopupOpen(true);\n      console.log(err);\n    }).finally(() => {\n      setIsLoading(false);\n    });\n  }\n  function handleLogin(password, email) {\n    setIsLoading(true);\n    authApi.login(password, email).then(res => {\n      if (res.token) {\n        localStorage.setItem('jwt', res.token);\n        setEmail(email);\n        setIsLoggedIn(true);\n      }\n    }).catch(err => {\n      setIsSuccess(false);\n      setStatusPopupOpen(true);\n      console.log(err);\n    }).finally(() => {\n      setIsLoading(false);\n    });\n  }\n  function signOut() {\n    setIsLoggedIn(false);\n    localStorage.removeItem('jwt');\n    navigate('/sign-in');\n  }\n  function handleTokenCheck() {\n    const jwt = localStorage.getItem('jwt');\n    if (jwt) {\n      authApi.checkToken(jwt).then(res => {\n        if (res) {\n          setEmail(res.data.email);\n          setIsLoggedIn(true);\n          navigate('/');\n        }\n      });\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n    value: currentUser,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        email: email,\n        isLoggedIn: isLoggedIn,\n        onSignOut: signOut,\n        location: location\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/sign-up\",\n          element: isLoggedIn ? /*#__PURE__*/_jsxDEV(Navigate, {\n            to: \"/\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 33\n          }, this) : /*#__PURE__*/_jsxDEV(Register, {\n            isLoading: isLoading,\n            onSubmit: handleRegister,\n            replace: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/sign-in\",\n          element: isLoggedIn ? /*#__PURE__*/_jsxDEV(Navigate, {\n            to: \"/\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 33\n          }, this) : /*#__PURE__*/_jsxDEV(Login, {\n            isLoading: isLoading,\n            onSubmit: handleLogin,\n            replace: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n            isLoggedIn: isLoggedIn,\n            children: [/*#__PURE__*/_jsxDEV(Main, {\n              onEditProfile: handleEditProfileClick,\n              onAddPlace: handleAddPlaceClick,\n              onEditAvatar: handleEditAvatarClick,\n              onCardClick: handleCardClick,\n              onCardLike: handleCardLike,\n              onCardDelete: handleDeleteButtonClick,\n              cards: cards\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n        className: \"popup popup_type_image\",\n        card: selectedCard,\n        onClose: closeAllPopups,\n        isOpen: selectedCard.isOpen,\n        link: selectedCard.link,\n        name: selectedCard.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n        isOpen: isEditProfilePopupOpen,\n        onClose: closeAllPopups,\n        onUpdateUser: handleUpdateUser,\n        isLoading: isLoading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(AddPlacePopup, {\n        isOpen: isAddPlacePopupOpen,\n        onClose: closeAllPopups,\n        onAddPlace: handleAddPlace,\n        isLoading: isLoading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ConfirmationPopup, {\n        onClose: closeAllPopups,\n        isOpen: isConfirmationPopupOpen,\n        cardId: deletedCardId,\n        onConfirmDelete: handleCardDelete,\n        isLoading: isLoading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n        isOpen: isEditAvatarPopupOpen,\n        onClose: closeAllPopups,\n        onUpdateAvatar: handleUpdateAvatar,\n        isLoading: isLoading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(InfoTooltip, {\n        isOpen: isStatusPopupOpen,\n        onClose: closeAllPopups,\n        errorText: 'Что-то пошло не так! Попробуйте ещё раз.',\n        successText: 'Вы успешно зарегистрировались!',\n        isSuccess: isSuccess\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 243,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"PmZAgTldoZasgT5jSKHZaufl10A=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","Header","Main","Footer","ImagePopup","api","CurrentUserContext","EditProfilePopup","EditAvatarPopup","AddPlacePopup","ConfirmationPopup","Routes","Route","Navigate","useNavigate","useLocation","ProtectedRoute","Login","Register","authApi","InfoTooltip","jsxDEV","_jsxDEV","App","_s","navigate","location","isEditProfilePopupOpen","setEditProfilePopupOpen","isAddPlacePopupOpen","setAddPlacePopupOpen","isEditAvatarPopupOpen","setEditAvatarPopupOpen","isConfirmationPopupOpen","setConfirmationPopupOpen","isStatusPopupOpen","setStatusPopupOpen","selectedCard","setSelectedCard","isOpen","link","name","currentUser","setCurrentUser","cards","setCards","deletedCardId","setDeletedCardId","isLoading","setIsLoading","isLoggedIn","setIsLoggedIn","email","setEmail","isSuccess","setIsSuccess","Promise","all","getUserInfo","getInitialCards","then","userData","initialCards","catch","err","alert","pathname","onPushEsc","evt","key","closeAllPopups","document","addEventListener","removeEventListener","handleTokenCheck","handleEditProfileClick","handleEditAvatarClick","handleAddPlaceClick","handleDeleteButtonClick","id","handleCardClick","card","handleCardLike","isLiked","_id","newCard","state","map","c","handleCardDelete","deleteCard","filter","finally","handleUpdateUser","description","editUserInfo","newData","handleUpdateAvatar","changeAvatar","handleAddPlace","sendNewCard","handleRegister","password","register","res","data","console","log","handleLogin","login","token","localStorage","setItem","signOut","removeItem","jwt","getItem","checkToken","Provider","value","children","className","onSignOut","fileName","_jsxFileName","lineNumber","columnNumber","path","element","to","onSubmit","replace","onEditProfile","onAddPlace","onEditAvatar","onCardClick","onCardLike","onCardDelete","onClose","onUpdateUser","cardId","onConfirmDelete","onUpdateAvatar","errorText","successText","_c","$RefreshReg$"],"sources":["C:/Users/cloud/Desktop/praktikum/dev/react-mesto-api-full-gha/frontend/src/components/App.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport Header from './Header';\r\nimport Main from './Main';\r\nimport Footer from './Footer';\r\nimport ImagePopup from './ImagePopup';\r\nimport { api } from '../utils/Api';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\r\nimport EditProfilePopup from './EditProfilePopup';\r\nimport EditAvatarPopup from './EditAvatarPopup';\r\nimport AddPlacePopup from './AddPlacePopup';\r\nimport ConfirmationPopup from './ConfirmationPopup';\r\nimport { Routes, Route, Navigate, useNavigate, useLocation } from 'react-router-dom';\r\nimport ProtectedRoute from './ProtectedRoute';\r\nimport Login from './Login';\r\nimport Register from './Register';\r\nimport * as authApi from '../utils/AuthApi';\r\nimport InfoTooltip from './InfoTooltip';\r\n\r\nexport default function App() {\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n    const [isEditProfilePopupOpen, setEditProfilePopupOpen] = useState(false);\r\n    const [isAddPlacePopupOpen, setAddPlacePopupOpen] = useState(false);\r\n    const [isEditAvatarPopupOpen, setEditAvatarPopupOpen] = useState(false);\r\n    const [isConfirmationPopupOpen, setConfirmationPopupOpen] = useState(false);\r\n    const [isStatusPopupOpen, setStatusPopupOpen] = useState(false);\r\n    const [selectedCard, setSelectedCard] = useState({\r\n        isOpen: false,\r\n        link: '',\r\n        name: ''\r\n    });\r\n    const [currentUser, setCurrentUser] = useState({});\r\n    const [cards, setCards] = useState([]);\r\n    const [deletedCardId, setDeletedCardId] = useState('');\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n    const [email, setEmail] = useState('');\r\n    const [isSuccess, setIsSuccess] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (isLoggedIn) {\r\n            Promise.all([api.getUserInfo(), api.getInitialCards()])\r\n                .then(([userData, initialCards]) => {\r\n                    setCurrentUser(userData);\r\n                    setCards(initialCards);\r\n                })\r\n                .catch(err => alert(err));\r\n        }\r\n    }, [isLoggedIn]);\r\n\r\n    useEffect(() => {\r\n        if (location.pathname !== '/sign-in') {\r\n            navigate('/sign-in');\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        function onPushEsc(evt) {\r\n            if (evt.key === 'Escape') {\r\n                closeAllPopups();\r\n            }\r\n        }\r\n        if (\r\n            isAddPlacePopupOpen ||\r\n            isConfirmationPopupOpen ||\r\n            isEditAvatarPopupOpen ||\r\n            isEditProfilePopupOpen ||\r\n            selectedCard ||\r\n            isStatusPopupOpen\r\n        ) {\r\n            document.addEventListener('keydown', onPushEsc);\r\n        } else {\r\n            document.removeEventListener('keydown', onPushEsc);\r\n        }\r\n    }, [\r\n        isAddPlacePopupOpen,\r\n        isConfirmationPopupOpen,\r\n        isEditAvatarPopupOpen,\r\n        isEditProfilePopupOpen,\r\n        selectedCard,\r\n        isStatusPopupOpen\r\n    ]);\r\n\r\n    useEffect(() => {\r\n        handleTokenCheck();\r\n    }, []);\r\n\r\n    function handleEditProfileClick() {\r\n        setEditProfilePopupOpen(true);\r\n    }\r\n\r\n    function handleEditAvatarClick() {\r\n        setEditAvatarPopupOpen(true);\r\n    }\r\n\r\n    function handleAddPlaceClick() {\r\n        setAddPlacePopupOpen(true);\r\n    }\r\n\r\n    function handleDeleteButtonClick(id) {\r\n        setDeletedCardId(id);\r\n        setConfirmationPopupOpen(true);\r\n    }\r\n\r\n    function closeAllPopups() {\r\n        setEditAvatarPopupOpen(false);\r\n        setEditProfilePopupOpen(false);\r\n        setAddPlacePopupOpen(false);\r\n        setSelectedCard({\r\n            isOpen: false,\r\n            link: '',\r\n            name: ''\r\n        });\r\n        setConfirmationPopupOpen(false);\r\n        setDeletedCardId('');\r\n        setStatusPopupOpen(false);\r\n    }\r\n\r\n    function handleCardClick(card) {\r\n        setSelectedCard({\r\n            isOpen: true,\r\n            link: card.link,\r\n            name: card.name\r\n        });\r\n    }\r\n\r\n    function handleCardLike(card, isLiked) {\r\n        api.handleCardLike(card._id, isLiked)\r\n            .then(newCard => {\r\n                setCards(state => state.map(c => (c._id === card._id ? newCard : c)));\r\n            })\r\n            .catch(err => alert(err));\r\n    }\r\n\r\n    function handleCardDelete(id) {\r\n        setIsLoading(true);\r\n        api.deleteCard(id)\r\n            .then(() => {\r\n                setCards(state => state.filter(c => c._id !== id));\r\n                closeAllPopups();\r\n            })\r\n            .catch(err => alert(err))\r\n            .finally(() => {\r\n                setIsLoading(false);\r\n            });\r\n    }\r\n    function handleUpdateUser(name, description) {\r\n        setIsLoading(true);\r\n        api.editUserInfo(name, description)\r\n            .then(newData => {\r\n                setCurrentUser(newData);\r\n                closeAllPopups();\r\n            })\r\n            .catch(err => alert(err))\r\n            .finally(() => {\r\n                setIsLoading(false);\r\n            });\r\n    }\r\n    function handleUpdateAvatar(link) {\r\n        setIsLoading(true);\r\n        api.changeAvatar(link)\r\n            .then(newData => {\r\n                setCurrentUser(newData);\r\n                closeAllPopups();\r\n            })\r\n            .catch(err => alert(err))\r\n            .finally(() => {\r\n                setIsLoading(false);\r\n            });\r\n    }\r\n    function handleAddPlace(name, link) {\r\n        setIsLoading(true);\r\n        api.sendNewCard(name, link)\r\n            .then(newCard => {\r\n                setCards([newCard, ...cards]);\r\n                closeAllPopups();\r\n            })\r\n            .catch(err => alert(err))\r\n            .finally(() => {\r\n                setIsLoading(false);\r\n            });\r\n    }\r\n    function handleRegister(password, email) {\r\n        setIsLoading(true);\r\n        authApi\r\n            .register(password, email)\r\n            .then(res => {\r\n                if (res.data) {\r\n                    setIsSuccess(true);\r\n                }\r\n                setStatusPopupOpen(true);\r\n            })\r\n            .catch(err => {\r\n                setIsSuccess(false);\r\n                setStatusPopupOpen(true);\r\n                console.log(err);\r\n            })\r\n            .finally(() => {\r\n                setIsLoading(false);\r\n            });\r\n    }\r\n    function handleLogin(password, email) {\r\n        setIsLoading(true);\r\n        authApi\r\n            .login(password, email)\r\n            .then(res => {\r\n                if (res.token) {\r\n                    localStorage.setItem('jwt', res.token);\r\n                    setEmail(email);\r\n                    setIsLoggedIn(true);\r\n                }\r\n            })\r\n            .catch(err => {\r\n                setIsSuccess(false);\r\n                setStatusPopupOpen(true);\r\n                console.log(err);\r\n            })\r\n            .finally(() => {\r\n                setIsLoading(false);\r\n            });\r\n    }\r\n\r\n    function signOut() {\r\n        setIsLoggedIn(false);\r\n        localStorage.removeItem('jwt');\r\n        navigate('/sign-in');\r\n    }\r\n\r\n    function handleTokenCheck() {\r\n        const jwt = localStorage.getItem('jwt');\r\n        if (jwt) {\r\n            authApi.checkToken(jwt).then(res => {\r\n                if (res) {\r\n                    setEmail(res.data.email);\r\n                    setIsLoggedIn(true);\r\n                    navigate('/');\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <CurrentUserContext.Provider value={currentUser}>\r\n            <div className=\"page\">\r\n                <Header\r\n                    email={email}\r\n                    isLoggedIn={isLoggedIn}\r\n                    onSignOut={signOut}\r\n                    location={location}\r\n                />\r\n                <Routes>\r\n                    <Route\r\n                        path=\"/sign-up\"\r\n                        element={\r\n                            isLoggedIn ? (\r\n                                <Navigate to=\"/\" />\r\n                            ) : (\r\n                                <Register isLoading={isLoading} onSubmit={handleRegister} replace />\r\n                            )\r\n                        }\r\n                    />\r\n                    <Route\r\n                        path=\"/sign-in\"\r\n                        element={\r\n                            isLoggedIn ? (\r\n                                <Navigate to=\"/\" />\r\n                            ) : (\r\n                                <Login isLoading={isLoading} onSubmit={handleLogin} replace />\r\n                            )\r\n                        }\r\n                    />\r\n                    <Route\r\n                        path=\"/\"\r\n                        element={\r\n                            <ProtectedRoute isLoggedIn={isLoggedIn}>\r\n                                <Main\r\n                                    onEditProfile={handleEditProfileClick}\r\n                                    onAddPlace={handleAddPlaceClick}\r\n                                    onEditAvatar={handleEditAvatarClick}\r\n                                    onCardClick={handleCardClick}\r\n                                    onCardLike={handleCardLike}\r\n                                    onCardDelete={handleDeleteButtonClick}\r\n                                    cards={cards}\r\n                                />\r\n                                <Footer />\r\n                            </ProtectedRoute>\r\n                        }\r\n                    />\r\n                </Routes>\r\n                <ImagePopup\r\n                    className=\"popup popup_type_image\"\r\n                    card={selectedCard}\r\n                    onClose={closeAllPopups}\r\n                    isOpen={selectedCard.isOpen}\r\n                    link={selectedCard.link}\r\n                    name={selectedCard.name}\r\n                />\r\n                <EditProfilePopup\r\n                    isOpen={isEditProfilePopupOpen}\r\n                    onClose={closeAllPopups}\r\n                    onUpdateUser={handleUpdateUser}\r\n                    isLoading={isLoading}\r\n                />\r\n                <AddPlacePopup\r\n                    isOpen={isAddPlacePopupOpen}\r\n                    onClose={closeAllPopups}\r\n                    onAddPlace={handleAddPlace}\r\n                    isLoading={isLoading}\r\n                />\r\n                <ConfirmationPopup\r\n                    onClose={closeAllPopups}\r\n                    isOpen={isConfirmationPopupOpen}\r\n                    cardId={deletedCardId}\r\n                    onConfirmDelete={handleCardDelete}\r\n                    isLoading={isLoading}\r\n                />\r\n                <EditAvatarPopup\r\n                    isOpen={isEditAvatarPopupOpen}\r\n                    onClose={closeAllPopups}\r\n                    onUpdateAvatar={handleUpdateAvatar}\r\n                    isLoading={isLoading}\r\n                />\r\n                <InfoTooltip\r\n                    isOpen={isStatusPopupOpen}\r\n                    onClose={closeAllPopups}\r\n                    errorText={'Что-то пошло не так! Попробуйте ещё раз.'}\r\n                    successText={'Вы успешно зарегистрировались!'}\r\n                    isSuccess={isSuccess}\r\n                />\r\n            </div>\r\n        </CurrentUserContext.Provider>\r\n    );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}