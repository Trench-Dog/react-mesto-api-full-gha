{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cloud\\\\Desktop\\\\praktikum\\\\dev\\\\react-mesto-api-full-gha\\\\frontend\\\\src\\\\components\\\\InfoTooltip.js\",\n  _s = $RefreshSig$();\nimport successImage from '../images/popup-success-image.svg';\nimport errorImage from '../images/popup-error-image.svg';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function InfoTooltip(props) {\n  _s();\n  const navigate = useNavigate();\n  function closePopup() {\n    props.onClose();\n    if (props.isSuccess) {\n      navigate('/sign-in');\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `popup ${props.isOpen ? 'popup_opened' : ''}`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup__container popup__container_type_status\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"popup__status-image\",\n        src: props.isSuccess ? successImage : errorImage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"popup__status-message\",\n        children: props.isSuccess ? props.successText : props.errorText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"popup__close-button popup__close-button_type_status\",\n        type: \"button\",\n        onClick: closePopup\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this);\n}\n_s(InfoTooltip, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c = InfoTooltip;\nvar _c;\n$RefreshReg$(_c, \"InfoTooltip\");","map":{"version":3,"names":["successImage","errorImage","useNavigate","jsxDEV","_jsxDEV","InfoTooltip","props","_s","navigate","closePopup","onClose","isSuccess","className","isOpen","children","src","fileName","_jsxFileName","lineNumber","columnNumber","successText","errorText","type","onClick","_c","$RefreshReg$"],"sources":["C:/Users/cloud/Desktop/praktikum/dev/react-mesto-api-full-gha/frontend/src/components/InfoTooltip.js"],"sourcesContent":["import successImage from '../images/popup-success-image.svg';\r\nimport errorImage from '../images/popup-error-image.svg';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nexport default function InfoTooltip(props) {\r\n    const navigate = useNavigate();\r\n    function closePopup() {\r\n        props.onClose();\r\n        if (props.isSuccess) {\r\n            navigate('/sign-in');\r\n        }\r\n    }\r\n    return (\r\n        <div className={`popup ${props.isOpen ? 'popup_opened' : ''}`}>\r\n            <div className=\"popup__container popup__container_type_status\">\r\n                <img\r\n                    className=\"popup__status-image\"\r\n                    src={props.isSuccess ? successImage : errorImage}\r\n                />\r\n                <h2 className=\"popup__status-message\">\r\n                    {props.isSuccess ? props.successText : props.errorText}\r\n                </h2>\r\n                <button\r\n                    className=\"popup__close-button popup__close-button_type_status\"\r\n                    type=\"button\"\r\n                    onClick={closePopup}\r\n                ></button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,YAAY,MAAM,mCAAmC;AAC5D,OAAOC,UAAU,MAAM,iCAAiC;AACxD,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,eAAe,SAASC,WAAWA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACvC,MAAMC,QAAQ,GAAGN,WAAW,CAAC,CAAC;EAC9B,SAASO,UAAUA,CAAA,EAAG;IAClBH,KAAK,CAACI,OAAO,CAAC,CAAC;IACf,IAAIJ,KAAK,CAACK,SAAS,EAAE;MACjBH,QAAQ,CAAC,UAAU,CAAC;IACxB;EACJ;EACA,oBACIJ,OAAA;IAAKQ,SAAS,EAAG,SAAQN,KAAK,CAACO,MAAM,GAAG,cAAc,GAAG,EAAG,EAAE;IAAAC,QAAA,eAC1DV,OAAA;MAAKQ,SAAS,EAAC,+CAA+C;MAAAE,QAAA,gBAC1DV,OAAA;QACIQ,SAAS,EAAC,qBAAqB;QAC/BG,GAAG,EAAET,KAAK,CAACK,SAAS,GAAGX,YAAY,GAAGC;MAAW;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpD,CAAC,eACFf,OAAA;QAAIQ,SAAS,EAAC,uBAAuB;QAAAE,QAAA,EAChCR,KAAK,CAACK,SAAS,GAAGL,KAAK,CAACc,WAAW,GAAGd,KAAK,CAACe;MAAS;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtD,CAAC,eACLf,OAAA;QACIQ,SAAS,EAAC,qDAAqD;QAC/DU,IAAI,EAAC,QAAQ;QACbC,OAAO,EAAEd;MAAW;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACf,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAACZ,EAAA,CA1BuBF,WAAW;EAAA,QACdH,WAAW;AAAA;AAAAsB,EAAA,GADRnB,WAAW;AAAA,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}