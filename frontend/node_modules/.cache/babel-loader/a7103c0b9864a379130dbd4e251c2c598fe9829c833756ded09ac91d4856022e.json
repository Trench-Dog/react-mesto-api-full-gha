{"ast":null,"code":"export const baseUrl = 'https://auth.nomoreparties.co';\nexport const register = (password, email) => {\n  return fetch(`${baseUrl}/signup`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      password: password,\n      email: email\n    })\n  }).then(res => {\n    return getResponseData(res);\n  });\n};\nexport const login = (password, email) => {\n  return fetch(`${baseUrl}/signin`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      password: password,\n      email: email\n    })\n  }).then(res => {\n    return getResponseData(res);\n  });\n};\nexport const checkToken = jwt => {\n  return fetch(`${baseUrl}/users/me`, {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${jwt}`\n    }\n  }).then(res => {\n    return getResponseData(res);\n  });\n};\nfunction getResponseData(res) {\n  if (!res.ok) {\n    return Promise.reject(`Ошибка: ${res.status}`);\n  }\n  return res.json();\n}","map":{"version":3,"names":["baseUrl","register","password","email","fetch","method","headers","body","JSON","stringify","then","res","getResponseData","login","checkToken","jwt","Authorization","ok","Promise","reject","status","json"],"sources":["C:/Users/cloud/Desktop/praktikum/dev/react-mesto-api-full-gha/frontend/src/utils/AuthApi.js"],"sourcesContent":["export const baseUrl = 'https://auth.nomoreparties.co';\r\n\r\nexport const register = (password, email) => {\r\n    return fetch(`${baseUrl}/signup`, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n            password: password,\r\n            email: email\r\n        })\r\n    }).then(res => {\r\n        return getResponseData(res);\r\n    });\r\n};\r\n\r\nexport const login = (password, email) => {\r\n    return fetch(`${baseUrl}/signin`, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n            password: password,\r\n            email: email\r\n        })\r\n    }).then(res => {\r\n        return getResponseData(res);\r\n    });\r\n};\r\n\r\nexport const checkToken = jwt => {\r\n    return fetch(`${baseUrl}/users/me`, {\r\n        method: 'GET',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            Authorization: `Bearer ${jwt}`\r\n        }\r\n    }).then(res => {\r\n        return getResponseData(res);\r\n    });\r\n};\r\n\r\nfunction getResponseData(res) {\r\n    if (!res.ok) {\r\n        return Promise.reject(`Ошибка: ${res.status}`);\r\n    }\r\n    return res.json();\r\n}\r\n"],"mappings":"AAAA,OAAO,MAAMA,OAAO,GAAG,+BAA+B;AAEtD,OAAO,MAAMC,QAAQ,GAAGA,CAACC,QAAQ,EAAEC,KAAK,KAAK;EACzC,OAAOC,KAAK,CAAE,GAAEJ,OAAQ,SAAQ,EAAE;IAC9BK,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACL,cAAc,EAAE;IACpB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MACjBP,QAAQ,EAAEA,QAAQ;MAClBC,KAAK,EAAEA;IACX,CAAC;EACL,CAAC,CAAC,CAACO,IAAI,CAACC,GAAG,IAAI;IACX,OAAOC,eAAe,CAACD,GAAG,CAAC;EAC/B,CAAC,CAAC;AACN,CAAC;AAED,OAAO,MAAME,KAAK,GAAGA,CAACX,QAAQ,EAAEC,KAAK,KAAK;EACtC,OAAOC,KAAK,CAAE,GAAEJ,OAAQ,SAAQ,EAAE;IAC9BK,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACL,cAAc,EAAE;IACpB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MACjBP,QAAQ,EAAEA,QAAQ;MAClBC,KAAK,EAAEA;IACX,CAAC;EACL,CAAC,CAAC,CAACO,IAAI,CAACC,GAAG,IAAI;IACX,OAAOC,eAAe,CAACD,GAAG,CAAC;EAC/B,CAAC,CAAC;AACN,CAAC;AAED,OAAO,MAAMG,UAAU,GAAGC,GAAG,IAAI;EAC7B,OAAOX,KAAK,CAAE,GAAEJ,OAAQ,WAAU,EAAE;IAChCK,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MACL,cAAc,EAAE,kBAAkB;MAClCU,aAAa,EAAG,UAASD,GAAI;IACjC;EACJ,CAAC,CAAC,CAACL,IAAI,CAACC,GAAG,IAAI;IACX,OAAOC,eAAe,CAACD,GAAG,CAAC;EAC/B,CAAC,CAAC;AACN,CAAC;AAED,SAASC,eAAeA,CAACD,GAAG,EAAE;EAC1B,IAAI,CAACA,GAAG,CAACM,EAAE,EAAE;IACT,OAAOC,OAAO,CAACC,MAAM,CAAE,WAAUR,GAAG,CAACS,MAAO,EAAC,CAAC;EAClD;EACA,OAAOT,GAAG,CAACU,IAAI,CAAC,CAAC;AACrB"},"metadata":{},"sourceType":"module","externalDependencies":[]}