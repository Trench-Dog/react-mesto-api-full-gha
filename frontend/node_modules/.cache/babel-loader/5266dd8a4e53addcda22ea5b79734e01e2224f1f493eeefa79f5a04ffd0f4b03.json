{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cloud\\\\Desktop\\\\praktikum\\\\dev\\\\react-mesto-api-full-gha\\\\frontend\\\\src\\\\components\\\\Register.js\",\n  _s = $RefreshSig$();\nimport EntranceForm from './EntranceForm';\nimport { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Register(props) {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  function handleEmailChange(evt) {\n    setEmail(evt.target.value);\n  }\n  function handlePasswordChange(evt) {\n    setPassword(evt.target.value);\n  }\n  const confirmation = /*#__PURE__*/_jsxDEV(\"p\", {\n    className: \"entrance-form__confirmation\",\n    children: [\"\\u0423\\u0436\\u0435 \\u0437\\u0430\\u0440\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u044B?\", /*#__PURE__*/_jsxDEV(Link, {\n      className: \"entrance-form__link\",\n      to: \"/sign-in\",\n      children: [' ', \"\\u0412\\u043E\\u0439\\u0442\\u0438\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n  function handleSubmit(evt) {\n    evt.preventDefault();\n    if (!email || !password) {\n      return;\n    }\n    props.onSubmit(password, email);\n  }\n  return /*#__PURE__*/_jsxDEV(EntranceForm, {\n    title: \"\\u0420\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0430\\u0446\\u0438\\u044F\",\n    text: props.isLoading ? 'Выполняем регистрацию...' : 'Зарегистрироваться',\n    confirmation: confirmation,\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      className: \"popup__data entrance-form__data\",\n      name: \"email\",\n      placeholder: \"Email\",\n      required: true,\n      minLength: \"2\",\n      maxLength: \"40\",\n      value: email,\n      onChange: handleEmailChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"popup__reminder entrance-form__reminder\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      className: \"popup__data entrance-form__data\",\n      name: \"password\",\n      placeholder: \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n      required: true,\n      minLength: \"2\",\n      maxLength: \"200\",\n      value: password,\n      onChange: handlePasswordChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"popup__reminder entrance-form__reminder\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n}\n_s(Register, \"TSZhDBNy8CmbxXgprY/vvMmTG1Q=\");\n_c = Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["EntranceForm","useState","Link","jsxDEV","_jsxDEV","Register","props","_s","email","setEmail","password","setPassword","handleEmailChange","evt","target","value","handlePasswordChange","confirmation","className","children","to","fileName","_jsxFileName","lineNumber","columnNumber","handleSubmit","preventDefault","onSubmit","title","text","isLoading","type","name","placeholder","required","minLength","maxLength","onChange","_c","$RefreshReg$"],"sources":["C:/Users/cloud/Desktop/praktikum/dev/react-mesto-api-full-gha/frontend/src/components/Register.js"],"sourcesContent":["import EntranceForm from './EntranceForm';\r\nimport { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function Register(props) {\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    function handleEmailChange(evt) {\r\n        setEmail(evt.target.value);\r\n    }\r\n    function handlePasswordChange(evt) {\r\n        setPassword(evt.target.value);\r\n    }\r\n    const confirmation = (\r\n        <p className=\"entrance-form__confirmation\">\r\n            Уже зарегистрированы?\r\n            <Link className=\"entrance-form__link\" to=\"/sign-in\">\r\n                {' '}\r\n                Войти\r\n            </Link>\r\n        </p>\r\n    );\r\n    function handleSubmit(evt) {\r\n        evt.preventDefault();\r\n        if (!email || !password) {\r\n            return;\r\n        }\r\n        props.onSubmit(password, email);\r\n    }\r\n    return (\r\n        <EntranceForm\r\n            title=\"Регистрация\"\r\n            text={props.isLoading ? 'Выполняем регистрацию...' : 'Зарегистрироваться'}\r\n            confirmation={confirmation}\r\n            onSubmit={handleSubmit}\r\n        >\r\n            <input\r\n                type=\"email\"\r\n                className=\"popup__data entrance-form__data\"\r\n                name=\"email\"\r\n                placeholder=\"Email\"\r\n                required\r\n                minLength=\"2\"\r\n                maxLength=\"40\"\r\n                value={email}\r\n                onChange={handleEmailChange}\r\n            />\r\n            <span className=\"popup__reminder entrance-form__reminder\"></span>\r\n            <input\r\n                type=\"password\"\r\n                className=\"popup__data entrance-form__data\"\r\n                name=\"password\"\r\n                placeholder=\"Пароль\"\r\n                required\r\n                minLength=\"2\"\r\n                maxLength=\"200\"\r\n                value={password}\r\n                onChange={handlePasswordChange}\r\n            />\r\n            <span className=\"popup__reminder entrance-form__reminder\"></span>\r\n        </EntranceForm>\r\n    );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,YAAY,MAAM,gBAAgB;AACzC,SAASC,QAAQ,QAAQ,OAAO;AAChC,SAASC,IAAI,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,eAAe,SAASC,QAAQA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACpC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC5C,SAASW,iBAAiBA,CAACC,GAAG,EAAE;IAC5BJ,QAAQ,CAACI,GAAG,CAACC,MAAM,CAACC,KAAK,CAAC;EAC9B;EACA,SAASC,oBAAoBA,CAACH,GAAG,EAAE;IAC/BF,WAAW,CAACE,GAAG,CAACC,MAAM,CAACC,KAAK,CAAC;EACjC;EACA,MAAME,YAAY,gBACdb,OAAA;IAAGc,SAAS,EAAC,6BAA6B;IAAAC,QAAA,GAAC,sHAEvC,eAAAf,OAAA,CAACF,IAAI;MAACgB,SAAS,EAAC,qBAAqB;MAACE,EAAE,EAAC,UAAU;MAAAD,QAAA,GAC9C,GAAG,EAAC,gCAET;IAAA;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CACN;EACD,SAASC,YAAYA,CAACZ,GAAG,EAAE;IACvBA,GAAG,CAACa,cAAc,CAAC,CAAC;IACpB,IAAI,CAAClB,KAAK,IAAI,CAACE,QAAQ,EAAE;MACrB;IACJ;IACAJ,KAAK,CAACqB,QAAQ,CAACjB,QAAQ,EAAEF,KAAK,CAAC;EACnC;EACA,oBACIJ,OAAA,CAACJ,YAAY;IACT4B,KAAK,EAAC,oEAAa;IACnBC,IAAI,EAAEvB,KAAK,CAACwB,SAAS,GAAG,0BAA0B,GAAG,oBAAqB;IAC1Eb,YAAY,EAAEA,YAAa;IAC3BU,QAAQ,EAAEF,YAAa;IAAAN,QAAA,gBAEvBf,OAAA;MACI2B,IAAI,EAAC,OAAO;MACZb,SAAS,EAAC,iCAAiC;MAC3Cc,IAAI,EAAC,OAAO;MACZC,WAAW,EAAC,OAAO;MACnBC,QAAQ;MACRC,SAAS,EAAC,GAAG;MACbC,SAAS,EAAC,IAAI;MACdrB,KAAK,EAAEP,KAAM;MACb6B,QAAQ,EAAEzB;IAAkB;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/B,CAAC,eACFpB,OAAA;MAAMc,SAAS,EAAC;IAAyC;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eACjEpB,OAAA;MACI2B,IAAI,EAAC,UAAU;MACfb,SAAS,EAAC,iCAAiC;MAC3Cc,IAAI,EAAC,UAAU;MACfC,WAAW,EAAC,sCAAQ;MACpBC,QAAQ;MACRC,SAAS,EAAC,GAAG;MACbC,SAAS,EAAC,KAAK;MACfrB,KAAK,EAAEL,QAAS;MAChB2B,QAAQ,EAAErB;IAAqB;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC,CAAC,eACFpB,OAAA;MAAMc,SAAS,EAAC;IAAyC;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvD,CAAC;AAEvB;AAACjB,EAAA,CA1DuBF,QAAQ;AAAAiC,EAAA,GAARjC,QAAQ;AAAA,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}